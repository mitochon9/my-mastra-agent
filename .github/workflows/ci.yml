name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
      fail-fast: true

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Cache Bun modules
      uses: actions/cache@v4
      id: bun-cache
      with:
        path: |
          ~/.bun/install/cache
          node_modules
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      if: steps.bun-cache.outputs.cache-hit != 'true'
      run: bun install --frozen-lockfile

    - name: Run all checks in parallel
      run: |
        bun run build &
        BUILD_PID=$!
        
        bun run tsc --noEmit &
        TSC_PID=$!
        
        bun test &
        TEST_PID=$!
        
        wait $BUILD_PID || (echo "Build failed" && exit 1)
        wait $TSC_PID || (echo "Type check failed" && exit 1)
        wait $TEST_PID || (echo "Tests failed" && exit 1)

  docker:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: weather-agent:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64