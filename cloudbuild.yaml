steps:
  # Build with Kaniko for faster builds and better caching
  - name: "gcr.io/kaniko-project/executor:latest"
    args:
      - "--dockerfile=Dockerfile.optimized"
      - "--context=dir://."
      - "--destination=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA"
      - "--destination=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest"
      - "--cache=true"
      - "--cache-repo=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}/cache"
      - "--cache-ttl=168h"
      - "--compressed-caching=false"
      - "--snapshot-mode=redo"
      - "--use-new-run"
    id: "build"

  # Run tests in parallel with deployment
  - name: "oven/bun:1-alpine"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        bun install --frozen-lockfile
        bun test
        bun run typecheck
    id: "test"
    waitFor: ["-"]

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--image"
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA"
      - "--region"
      - "${_REGION}"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "8080"
      - "--memory"
      - "${_MEMORY}"
      - "--cpu"
      - "${_CPU}"
      - "--min-instances"
      - "${_MIN_INSTANCES}"
      - "--max-instances"
      - "${_MAX_INSTANCES}"
      - "--set-secrets"
      - "GOOGLE_GENERATIVE_AI_API_KEY=google-generative-ai-api-key:latest"
      - "--service-account"
      - "cloud-run-sa@revedge-ai-agent.iam.gserviceaccount.com"
      - "--cpu-boost"
      - "--execution-environment"
      - "gen2"
    waitFor: ["build"]

  # Warm up the service
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME} --region=${_REGION} --format='value(status.url)')
        curl -s -o /dev/null -w "%{http_code}" $SERVICE_URL || true
    waitFor: ["deploy"]

# Substitutions with optimized defaults
substitutions:
  _SERVICE_NAME: "my-mastra-agent"
  _REGION: "asia-northeast1"
  _REPOSITORY: "cloud-run-apps"
  _MEMORY: "512Mi"
  _CPU: "2" # Increased for faster cold starts
  _MIN_INSTANCES: "1" # Keep 1 warm instance
  _MAX_INSTANCES: "100" # Higher max for better scaling

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_32" # Larger machine for faster builds
  diskSizeGb: 200
  substitutionOption: "ALLOW_LOOSE"
  pool:
    name: "projects/$PROJECT_ID/locations/${_REGION}/workerPools/bun-pool" # Use a custom worker pool if available

# Shorter timeout
timeout: "300s"
